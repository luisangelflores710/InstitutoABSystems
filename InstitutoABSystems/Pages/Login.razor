@page "/"
<link href="css/bootstrap/Login.css" rel="stylesheet" />
@using InstitutoABSystems.Data
@using InstitutoABSystems.Models
@inject AppDbContext Db
@inject NavigationManager Nav

<div class="login-wrapper d-flex vh-100">
    <!-- Lado izquierdo: Donde va el Logo -->
    <div class="login-left d-flex flex-column justify-content-center align-items-center text-center p-5">
        <img src="images/logo.png" alt="Logo" class="logo mb-4" />
        <h1 class="fw-bold">Bienvenido</h1>
        <h3 class="brand">Instituto AB Systems</h3>
        <p class="text-muted">Accede a tu cuenta para continuar</p>
    </div>

    <!-- Lado derecho: Formulario de Inicio de sesión -->
    <div class="login-right d-flex flex-column justify-content-center p-5 shadow-lg">
        <EditForm Model="@loginModel" OnValidSubmit="LoginUsuario">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <div class="mb-4">
                <label class="form-label text-light">Email</label>
                <InputText @bind-Value="loginModel.Email" class="login-input" placeholder="Correo electrónico" />
                <div class="line-accent"></div>
            </div>

            <div class="mb-4">
                <label class="form-label text-light">Contraseña</label>
                <InputText @bind-Value="loginModel.Contraseña" class="login-input" placeholder="Contraseña" type="password" />
                <div class="line-accent"></div>
            </div>

            <button type="submit" class="btn-submit w-100">
                Iniciar sesión / Crear usuario
            </button>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="text-warning mt-3">@mensaje</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private Usuario loginModel = new Usuario();
    private string mensaje;

    private void LoginUsuario()
    {
        var usuario = Db.Usuarios.FirstOrDefault(u => u.Email == loginModel.Email);

        if (usuario == null)
        {
            // Si no existe crea un usuario nuevo
            Db.Usuarios.Add(loginModel);
            Db.SaveChanges();

            Sesion.IdUsuario = loginModel.Id;
            Sesion.Email = loginModel.Email;

            // Como es nuevo lo manda a registrar sus datos
            Nav.NavigateTo($"/registro/{loginModel.Id}");
            return;
        }

        // Si existe, validamos su contraseña
        if (usuario.Contraseña != loginModel.Contraseña)
        {
            mensaje = "Contraseña incorrecta"; //si se equivoca
            return;
        }

        // Si no se equivoca inicia sesión
        Sesion.IdUsuario = usuario.Id;
        Sesion.Email = usuario.Email;

        // Validamos que ya tiene datos
        var estudiante = Db.Estudiantes.FirstOrDefault(e => e.IdUsuario == usuario.Id);

        if (estudiante == null)
        {
            //Si no tiene lo mandamos a registro de datos
            Nav.NavigateTo($"/registro/{usuario.Id}");
        }
        else
        {
            //Si ya tiene lo mandamos al inicio donde vera sus examenes.
            Nav.NavigateTo("/inicio");
        }
    }
}

